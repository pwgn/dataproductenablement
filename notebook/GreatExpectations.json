{
	"name": "GreatExpectations",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "DataProduct",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/c81cc72a-af55-4e1e-9ceb-7e3c58388c5d/resourceGroups/data-product-enablement/providers/Microsoft.Synapse/workspaces/dataproductenablement/bigDataPools/DataProduct",
				"name": "DataProduct",
				"type": "Spark",
				"endpoint": "https://dataproductenablement.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/DataProduct",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"import great_expectations as ge\r\n",
					"from great_expectations.core.batch import BatchRequest, RuntimeBatchRequest\r\n",
					"from great_expectations.data_context import BaseDataContext\r\n",
					"from great_expectations.data_context.types.base import (\r\n",
					"    DataContextConfig,\r\n",
					"    InMemoryStoreBackendDefaults,\r\n",
					")"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# TODO: Load linked source\r\n",
					"data = [\r\n",
					"    {\"a\": 1, \"b\": 2, \"c\": 3},\r\n",
					"    {\"a\": 4, \"b\": 5, \"c\": 6},\r\n",
					"    {\"a\": 7, \"b\": 8, \"c\": 9},\r\n",
					"]\r\n",
					"df = spark.createDataFrame(data)\r\n",
					"\r\n",
					"# TODO: Make query"
				],
				"execution_count": 2
			}
		]
	}
}